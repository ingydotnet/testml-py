diff --git a/lib/TestML/Document.pm b/lib/TestML/Document.pm
index 1027508..7902561 100644
--- a/lib/TestML/Document.pm
+++ b/lib/TestML/Document.pm
@@ -158,6 +178,7 @@ sub not_test_expression {
 sub got_data_point {
     my $self = shift;
     my $name = shift;
+    $name =~ s/^\$// or die;
     push @{$self->current_statement->points}, $name;
     push @{$self->current_expression->[-1]->transforms},
         TestML::Transform->new(
@@ -180,13 +201,21 @@ sub got_single_quoted_string {
     my $self = shift;
     my $value = shift;
     $value =~ s/\\([\\\'])/$ESCAPES{$1}/g;
-    push @{$self->arguments}, $value;
+    push @{$self->current_expression->[-1]->transforms},
+        TestML::Transform->new(
+            name => 'String',
+            args => [$value],
+        );
 }
 sub got_double_quoted_string {
     my $self = shift;
     my $value = shift;
     $value =~ s/\\([\\\"nt])/$ESCAPES{$1}/g;
-    push @{$self->arguments}, $value;
+    push @{$self->current_expression->[-1]->transforms},
+        TestML::Transform->new(
+            name => 'String',
+            args => [$value],
+        );
 }
 sub got_transform_name {
     my $self = shift;
@@ -201,12 +230,12 @@ sub got_transform_call {
             name => $name,
             args => $self->arguments,
         );
+    delete $self->{arguments};
 }
 
@@ -246,4 +275,4 @@ sub got_point_phrase {
     $self->current_block->points->{$self->point_name} = shift;
 }
 
diff --git a/lib/TestML/Runner.pm b/lib/TestML/Runner.pm
index c7805d3..99d0d8e 100644
--- a/lib/TestML/Runner.pm
+++ b/lib/TestML/Runner.pm
@@ -17,30 +17,37 @@ sub setup {
 }
 
 sub init_bridge {
-    my $self = shift;
-    my $class = $self->bridge or die "No Bridge class specified";
-    eval "require $class; 1" or die $@;
-    return $class->new();
+    die "'init_bridge' must be implemented in subclass";
 }
 
 sub run {
     my $self = shift;
 
     $self->base(($0 =~ /(.*)\//) ? $1 : '.');
-    $self->setup();
     $self->title();
     $self->plan_begin();
 
     for my $statement (@{$self->doc->tests->statements}) {
-        my $blocks = $self->select_blocks($statement->points);
+        my $points = $statement->points;
+        if (not @$points) {
+            my $left = $self->evaluate_expression($statement->left_expression->[0]);
+            if (@{$statement->right_expression}) {
+                my $right = $self->evaluate_expression(
+                    $statement->right_expression->[0]
+                );
+                $self->do_test('EQ', $left, $right, undef);
+            }
+            next;
+        }
+        my $blocks = $self->select_blocks($points);
         for my $block (@$blocks) {
             my $left = $self->evaluate_expression(
@@ -73,9 +80,9 @@ sub select_blocks {
 sub evaluate_expression {
     my $self = shift;
     my $expression = shift;
-    my $block = shift;
+    my $block = shift || undef;
 
     my $context = TestML::Context->new(
         document => $self->doc,
         block => $block,
         value => undef,
@@ -83,22 +90,29 @@ sub evaluate_expression {
 
     for my $transform (@{$expression->transforms}) {
         my $transform_name = $transform->name;
         next if $context->error and $transform_name ne 'Catch';
         my $function = $self->Bridge->__get_transform_function($transform_name);
         my $value = eval {
-            &$function($context, @{$transform->args});
+            &$function(
+                $context,
+                map {
+                    (ref($_) eq 'TestML::Expression')
+                    ? $self->evaluate_expression($_, $block)
+                    : $_
+                } @{$transform->args}
+            );
         };
         if ($@) {
             $context->error($@);
         }
         else {
             $context->value($value);
         }
     }
     if ($context->error) {
         die $context->error;
     }
     return $context;
 }
 
 sub parse {
@@ -108,21 +122,24 @@ sub parse {
         receiver => TestML::Document::Builder->new(),
         start_token => 'document',
     );
+    $parser->receiver->grammar($parser->grammar);
 
     $parser->open($self->document);
     $parser->parse;
 
-    $self->parse_data($parser->receiver);
+    $self->parse_data($parser);
     return $parser->receiver->document;
 }
 
 sub parse_data {
     my $self = shift;
-    my $builder = shift;
+    my $parser = shift;
+    my $builder = $parser->receiver;
     my $document = $builder->document;
     for my $file (@{$document->meta->data->{Data}}) {
         my $parser = TestML::Parser->new(
             receiver => TestML::Document::Builder->new(),
+            grammar => $parser->grammar,
             start_token => 'data',
         );
 
diff --git a/lib/TestML/Runner/TAP.pm b/lib/TestML/Runner/TAP.pm
index 67f50a2..611e782 100644
--- a/lib/TestML/Runner/TAP.pm
+++ b/lib/TestML/Runner/TAP.pm
@@ -8,14 +8,17 @@ use Test::Builder;
 
 field 'test_builder' => -init => 'Test::Builder->new';
 
-sub setup {
+sub init_bridge {
     my $self = shift;
-    {
-        local @INC = ('t', 't/lib', @INC);
-        my $class = $self->bridge;
+
+    local @INC = ('t', 't/lib', @INC);
+    my $class = $self->bridge;
+    if ($class ne 'main') {
         eval "require $class";
-        die $@ if $@;
+        die "Error loading bridge class '$class': $@" if $@;
     }
+
+    return $class->new();
 }
 
 sub title {
diff --git a/lib/TestML/Standard.pm b/lib/TestML/Standard.pm
index aa55f2f..bb4ab2d 100644
--- a/lib/TestML/Standard.pm
+++ b/lib/TestML/Standard.pm
@@ -34,18 +34,18 @@ sub Catch {
     return $error;
 }
 
 sub Throw {
     my $self = shift;
-    my $msg = shift || $self->value
+    my $msg = @_ ? (shift)->value : $self->value
       or die "Throw called without an error msg";
     die $msg;
 }
 
 sub String {
     my $self = shift;
     my $string =
     (defined $self->value) ? $self->value :
-    @_ ? (shift) :
+    @_ ? ref($_[0]) ? (shift)->value : (shift) :
     $self->raise(
         'StandardLibraryException',
         'Str transform called but no string available'
@@ -53,46 +53,51 @@
 
 sub Join {
     my $list = (shift)->value;
-    my $string = @_ ? shift : '';
+    my $string = @_ ? (shift)->value : '';
     return join $string, @$list;
 }
 
+sub Chomp {
+    my $string = (shift)->value;
+    chomp($string);
+    return $string;
+}
diff --git a/t/Bridge.pm b/t/Bridge.pm
new file mode 100644
index 0000000..42ac74a
--- /dev/null
+++ b/t/Bridge.pm
@@ -0,0 +1,35 @@
+sub combine {
+    my $self = shift;
+    my $suffix = shift;
+    $self->value . ' ' . $suffix->value;
+}
diff --git a/t/arguments.t b/t/arguments.t
new file mode 100644
index 0000000..ef18987
--- /dev/null
+++ b/t/arguments.t
@@ -0,0 +1,3 @@
+use TestML -run,
+    -bridge => 't::Bridge',
+    -document => 't/testml/arguments.tml';
diff --git a/t/basic.t b/t/basic.t
index e3f959a..db1bd45 100644
--- a/t/basic.t
+++ b/t/basic.t
@@ -2,5 +2,5 @@ use TestML::Runner::TAP;
 
 TestML::Runner::TAP->new(
     document => 't/testml/basic.tml',
-    bridge => 'TestMLTestBridge',
+    bridge => 't::Bridge',
 )->run();
diff --git a/t/error.t b/t/error.t
deleted file mode 100644
index d7931fe..0000000
--- a/t/error.t
+++ /dev/null
@@ -1,13 +0,0 @@
-use TestML -run,
-    -bridge => 'TestMLTestBridge';
-__DATA__
-%TestML: 1.0
-
-testml_stream.parse_testml().Catch().msg() == error;
-
-=== No TestML meta directive
---- testml_stream
-# A comment
-foo == bar;
---- error: No TestML meta directive found
---- line: 2
diff --git a/t/external.t b/t/external.t
index fb3ad7c..06ac08a 100644
--- a/t/external.t
+++ b/t/external.t
@@ -1,4 +1,4 @@
-use TestML -run, -bridge => 'TestMLTestBridge';
+use TestML -run, -bridge => 't::Bridge';
 
 __DATA__
 
@@ -7,4 +7,4 @@ __DATA__
 %Data: external2.tml
 %Data: external1.tml
 
-foo == bar;
+$foo == $bar;
diff --git a/t/inline-bridge.t b/t/inline-bridge.t
new file mode 100644
index 0000000..efc5133
--- /dev/null
+++ b/t/inline-bridge.t
@@ -0,0 +1,25 @@
+use TestML -run, -bridge => 'main';
+use base TestML::Bridge;
+
+sub upper {
+    my $self = shift;
+    return uc($self->value);
+}
+__DATA__
+
+%TestML: 1.0
+
+$foo.upper() == $bar;
+
+=== Foo for thought
+--- foo: o hai
+--- bar: O HAI
+
+=== Bar the door
+--- foo
+o
+Hai
+--- bar
+O
+HAI
+
diff --git a/t/inline.t b/t/inline.t
index 6f407b7..193a93c 100644
--- a/t/inline.t
+++ b/t/inline.t
@@ -1,4 +1,4 @@
-use TestML -run, -bridge => 'TestMLTestBridge';
+use TestML -run, -bridge => 't::Bridge';
 
 __DATA__
 
@@ -6,8 +6,8 @@ __DATA__
 %Title: Ingy's Test
 %Plan: 4
 
-foo == bar;
-bar == foo;
+$foo == $bar;
+$bar == $foo;
 
 === Foo for thought
 --- foo: O HAI
diff --git a/t/markers.t b/t/markers.t
new file mode 100644
index 0000000..f50fa96
--- /dev/null
+++ b/t/markers.t
@@ -0,0 +1,6 @@
+use TestML::Runner::TAP;
+
+TestML::Runner::TAP->new(
+    document => 't/testml/markers.tml',
+    bridge => 't::Bridge',
+)->run();
diff --git a/t/no-data.t b/t/no-data.t
new file mode 100644
index 0000000..584c95c
--- /dev/null
+++ b/t/no-data.t
@@ -0,0 +1,2 @@
+use TestML -run,
+    -document => 't/testml/no-data.tml';
diff --git a/t/simple-use.t b/t/simple-use.t
index d7b3f0f..4b3cdb9 100644
--- a/t/simple-use.t
+++ b/t/simple-use.t
@@ -1,3 +1,3 @@
 use TestML -run,
     -document => 't/testml/basic.tml',
-    -bridge => 'TestMLTestBridge';
+    -bridge => 't::Bridge';
diff --git a/t/standard.t b/t/standard.t
new file mode 100644
index 0000000..41e0b90
--- /dev/null
+++ b/t/standard.t
@@ -0,0 +1,11 @@
+use TestML -run;
+
+__DATA__
+%TestML: 1.0
+
+$foo.Chomp() == $bar;
+
+=== Test
+--- foo
+Hello
+--- bar: Hello
diff --git a/t/testml b/t/testml
index 216591d..fae71ec 160000
--- a/t/testml
+++ b/t/testml
@@ -1 +1 @@
-Subproject commit 216591db8c952eba824d5567448c36172c715e67
+Subproject commit fae71ec284fc564d9ca98d4de3def98f39188064
diff --git a/t/uncat.t b/t/uncat.t
index 44ab9c8..ae2f3d4 100644
--- a/t/uncat.t
+++ b/t/uncat.t
@@ -3,10 +3,13 @@ use TestML -run;
 __DATA__
 %TestML: 1.0
 
-error.Throw().bogus().Catch() == error;
-Throw('My error message').Catch() == error;
+$error.Throw().bogus().Catch() == $error;
+Throw('My error message').Catch() == $error;
 
-empty == Str("");
+$empty == String("");
+$empty == "";
+
+"foo" == "foo";
 
 === Throw/Catch
 --- error: My error message
diff --git a/t/yaml-tests.t b/t/yaml-tests.t
new file mode 100644
index 0000000..121c592
--- /dev/null
+++ b/t/yaml-tests.t
@@ -0,0 +1,13 @@
+use TestML -run;
+
+
+__END__
+%TestML: 1.0
+%PointMarker: +++
+
+$perl == $perl;
+
+
+=== Mapping in Mapping with Alias
++++ perl
+xxx
